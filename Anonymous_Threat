using System;
using System.Collections.Generic;
using System.Linq;

namespace Anonymous_Threat
{
    class Program
    {
        static void Main(string[] args)
        {
            List<string> inputList = Console.ReadLine()
                .Split(" ", StringSplitOptions.RemoveEmptyEntries)
                .ToList();

            while (true)
            {
                List<string> comands = Console.ReadLine()
                .Split(" ", StringSplitOptions.RemoveEmptyEntries)
                .ToList();

                if (comands[0] == "3:1")
                {
                    break;
                }
                else if (comands[0] == "merge")
                {
                    MergeStrings(inputList, comands);
                }
                else if (comands[0] == "divide")
                {
                    int index = int.Parse(comands[1]);
                    int partitions = int.Parse(comands[2]);

                    SplitsStrings(inputList, index, partitions);
                }


            }

            Console.WriteLine(string.Join(" ", inputList));


        }

        private static void SplitsStrings(List<string> inputList, int index, int partitions)
        {
            string element = inputList[index];

            int newPartitionsLength = inputList[index].Length / partitions;

            List<string> newList = new List<string>();

            int splitter = 0;

            for (int i = 0; i < partitions; i++)
            {

                if (partitions == i + 1)
                {
                    string subString = element.Substring(splitter);
                    newList.Add(subString);
                }
                else
                {
                    string subString = element.Substring(splitter, newPartitionsLength);
                    newList.Add(subString);
                }
                splitter += newPartitionsLength;
            }

            newList.Reverse();

            foreach (string words in newList)
            {
                inputList.Insert(index + 1, words);
            }
            inputList.RemoveAt(index);
        }

        private static void MergeStrings(List<string> inputList, List<string> commandList)
        {
            int index = int.Parse(commandList[1]);
            int endIndex = int.Parse(commandList[2]);


            if (endIndex + 1 >= inputList.Count)
            {
                endIndex = inputList.Count - 1;
            }

            if (index >= inputList.Count)
            {
                endIndex = inputList.Count - 1;
            }

            if (index < 0)
            {

                index = 0;

            }

            if (endIndex < 0)
            {
                endIndex = 0;
            }
            bool isChanged = false;
            int range = endIndex - index;
            string newElement = "";
            for (int i = 0; i < range + 1; i++)
            {
                newElement += inputList[index + i];
                isChanged = true;
            }

            if (isChanged)
            {
                inputList.RemoveRange(index, range + 1);
                inputList.Insert(index, newElement);
            }

        }
    }
}
